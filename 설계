[프로젝트명 : 신재생 에너지 데이터 모니터링 시스템]

1. 구성 요소
1-1. 백엔드 (ASP.NET Core Web API)
1) 신재생 에너지 데이터 (예: 태양광, 풍력) 수집 및 저장
2) 클라이언트(WPF)에서 요청하는 데이터를 JSON 형태로 제공
3) PostgreSQL 데이터베이스와 연결
1-2. 프론트엔드 (WPF)
1) 실시간으로 데이터를 시각화 (예: 그래프, 차트)
2) 백엔드에서 데이터를 받아와 UI에 표시
1-3. 데이터베이스 (PostgreSQL)
1) 센서 데이터 저장
2) 로그 및 설정 값 관리

2. 툴설치
2-1. PostgreSQL설치
https://www.enterprisedb.com/downloads/postgres-postgresql-downloads
PostgreSQL Version 17.4 Windows x86-64
https://www.enterprisedb.com/postgresql-tutorial-resources-training-1?uuid=69f95902-b451-4735-b7e4-1b62209d4dfd&campaignId=postgres_rc_17
postgresql-17.4-1-windows-x64.exe

Installation Summary
Installation Directory: C:\Program Files\PostgreSQL\17
Server Installation Directory: C:\Program Files\PostgreSQL\17
Data Directory: C:\Program Files\PostgreSQL\17\data
Database Port: 5432
Database Superuser: postgres
Operating System Account: NT AUTHORITY\NetworkService
Database Service: postgresql-x64-17
Command Line Tools Installation Directory: C:\Program Files\PostgreSQL\17
pgAdmin4 Installation Directory: C:\Program Files\PostgreSQL\17\pgAdmin 4
Stack Builder Installation Directory: C:\Program Files\PostgreSQL\17
Installation Log: C:\Users\nayou\AppData\Local\Temp\install-postgresql.log

3. DB설계
-----------------------------------
|          Users                 |
-----------------------------------
| + user_id: SERIAL (PK)         |
| + username: VARCHAR(50)        |
| + password_hash: TEXT          |
| + email: VARCHAR(100) (UNIQUE) |
| + role: VARCHAR(20)            |
| + created_at: TIMESTAMP        |
-----------------------------------
                │
                │  (1:N)
                ▼
-----------------------------------
|          Devices               |
-----------------------------------
| + device_id: SERIAL (PK)       |
| + user_id: INT (FK)            |
| + name: VARCHAR(100)           |
| + type: VARCHAR(50)            |
| + location: TEXT               |
| + created_at: TIMESTAMP        |
-----------------------------------
                │
                │  (1:N)
                ▼
-----------------------------------
|          Sensors               |
-----------------------------------
| + sensor_id: SERIAL (PK)       |
| + device_id: INT (FK)          |
| + sensor_type: VARCHAR(50)     |
| + unit: VARCHAR(20)            |
| + created_at: TIMESTAMP        |
-----------------------------------
                │
                │  (1:N)
                ▼
-----------------------------------
|          Sensor_Data           |
-----------------------------------
| + data_id: SERIAL (PK)         |
| + sensor_id: INT (FK)          |
| + value: FLOAT                 |
| + timestamp: TIMESTAMP         |
-----------------------------------
                │
                │  (1:N)
                ▼
-----------------------------------
|          Alerts                |
-----------------------------------
| + alert_id: SERIAL (PK)        |
| + device_id: INT (FK)          |
| + message: TEXT                |
| + severity: VARCHAR(20)        |
| + triggered_at: TIMESTAMP      |
-----------------------------------

4. DB, TABLE생성 및 DATA생성

CREATE DATABASE energy_monitor;

BEGIN;

-- 사용자 테이블 (Users)
CREATE TABLE Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password_hash TEXT NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    role VARCHAR(20) DEFAULT 'user',
    created_at TIMESTAMP DEFAULT now()
);

-- 장치 테이블 (Devices)
CREATE TABLE Devices (
    device_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Users(user_id) ON DELETE CASCADE,
    name VARCHAR(100) NOT NULL,
    type VARCHAR(50) NOT NULL,
    location TEXT,
    created_at TIMESTAMP DEFAULT now()
);

-- 센서 테이블 (Sensors)
CREATE TABLE Sensors (
    sensor_id SERIAL PRIMARY KEY,
    device_id INT REFERENCES Devices(device_id) ON DELETE CASCADE,
    sensor_type VARCHAR(50) NOT NULL,
    unit VARCHAR(20),
    created_at TIMESTAMP DEFAULT now()
);

-- 센서 데이터 테이블 (Sensor_Data)
CREATE TABLE Sensor_Data (
    data_id SERIAL PRIMARY KEY,
    sensor_id INT REFERENCES Sensors(sensor_id) ON DELETE CASCADE,
    value FLOAT NOT NULL,
    timestamp TIMESTAMP DEFAULT now()
);

-- 경고 로그 테이블 (Alerts)
CREATE TABLE Alerts (
    alert_id SERIAL PRIMARY KEY,
    device_id INT REFERENCES Devices(device_id) ON DELETE CASCADE,
    message TEXT NOT NULL,
    severity VARCHAR(20) NOT NULL,
    triggered_at TIMESTAMP DEFAULT now()
);

-- 사용자 데이터 (Users)
INSERT INTO Users (username, password_hash, email, role) VALUES
('admin', 'hashedpassword123', 'admin@example.com', 'admin'),
('user1', 'hashedpassword456', 'user1@example.com', 'user'),
('user2', 'hashedpassword789', 'user2@example.com', 'user'),
('user3', 'hashedpasswordabc', 'user3@example.com', 'user'),
('user4', 'hashedpasswordxyz', 'user4@example.com', 'user');

-- 장치 데이터 (Devices)
INSERT INTO Devices (user_id, name, type, location) VALUES
(1, '태양광 인버터', 'solar_inverter', '서울'),
(2, '풍력 터빈', 'wind_turbine', '부산'),
(3, '배터리 저장 장치', 'battery_storage', '대구'),
(4, '수력 발전기', 'hydro_generator', '광주'),
(5, '전력 모니터링 시스템', 'power_monitor', '대전');

-- 센서 데이터 (Sensors)
INSERT INTO Sensors (device_id, sensor_type, unit) VALUES
(1, '전압 센서', 'V'),
(2, '풍속 센서', 'm/s'),
(3, '전류 센서', 'A'),
(4, '수위 센서', 'cm'),
(5, '온도 센서', '°C');

-- 센서 측정 데이터 (Sensor_Data)
INSERT INTO Sensor_Data (sensor_id, value, timestamp) VALUES
(1, 220.5, '2025-04-03 10:00:00'),
(2, 15.3, '2025-04-03 10:05:00'),
(3, 32.7, '2025-04-03 10:10:00'),
(4, 75.2, '2025-04-03 10:15:00'),
(5, 27.8, '2025-04-03 10:20:00');

-- 경고 로그 데이터 (Alerts)
INSERT INTO Alerts (device_id, message, severity, triggered_at) VALUES
(1, '전압이 비정상적으로 높습니다.', 'HIGH', '2025-04-03 10:30:00'),
(2, '풍속이 위험 수준입니다.', 'CRITICAL', '2025-04-03 10:35:00'),
(3, '배터리 전류 이상 감지.', 'MEDIUM', '2025-04-03 10:40:00'),
(4, '수위 센서 데이터 오류 발생.', 'LOW', '2025-04-03 10:45:00'),
(5, '온도 센서가 50°C 이상 감지.', 'HIGH', '2025-04-03 10:50:00');

COMMIT;

